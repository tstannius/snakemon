import time
from pathlib import Path

wildcard_constraints:
    sample = r'|'.join(["1","2","3"])

rule touch_no_wc:
    output:
        "tmp/dep-no_wc.txt"
    run:
        time.sleep(1)
        Path(output[0]).touch()

rule touch_dep_slow:
    output:
        "tmp/dep-slow-{sample}.txt"
    run:
        time.sleep(3)
        Path(output[0]).touch()

rule touch_dep_fast:
    output:
        "tmp/dep-fast-{sample}.txt"
    run:
        time.sleep(1)
        Path(output[0]).touch()

rule aggregate_deps_ok:
    input:
        expand("tmp/dep-fast-{n}.txt", n=[1,2,3]),
        "tmp/dep-no_wc.txt"
    output:
        "out/result_ok.txt"
    log: "logs/aggregate_deps_ok/result_ok.txt"
    benchmark: "benchmarks/aggregate_deps_ok/result_ok.txt"
    run:
        time.sleep(1)
        Path(output[0]).touch()

rule aggregate_deps_and_fail:
    input:
        expand("tmp/dep-fast-{n}.txt", n=[1,2,3])
    output:
        "out/result_fail.txt"
    log:
        "logs/aggregate_deps_and_fail.log"
    run:
        time.sleep(1)
        assert(False), "This rule will fail"
        Path(output[0]).touch()

rule aggregate_deps_and_missing_output:
    input:
        expand("tmp/dep-fast-{n}.txt", n=[1,2,3])
    output:
        "out/result_missing.txt"
    run:
        time.sleep(1)

rule all_w_missing:
    input:
        "out/result_missing.txt"

rule all_w_fail:
    input:
        "out/result_fail.txt"

rule all:
    input:
        "out/result_ok.txt"
