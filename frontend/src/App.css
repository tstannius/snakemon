:root {
  --sm-green-bright: rgb(64, 145, 119);
  --sm-green-dark: rgb(9, 33, 33);
}

#foo {
  color: var(--sm-green-dark);
}

/* How to chain css classes, note the char prefix: */
/* #header .class tag */
/* https://medium.com/insider-inc-engineering/delightful-ways-to-write-reusable-css-using-subclasses-903e90c9cf87 */
.table thead tr th {
  /* background-color: var(--sm-green-dark);
  color: var(--sm-green-bright); */
  color: black
}

.centered {
  height: 100vh; /* Magic here */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* base, unchecked, darker */
.btn-filter {
  color: white;
  filter: brightness(80%);
  text-align: center !important;
}

/* checked, active, colorful */
.btn-check:active + .btn-filter, .btn-check:checked + .btn-filter, .btn-filter.active, .btn-filter:active {
  filter: brightness(100%);
}

/* hover, in between colorful and darker */
.btn-filter:hover {
  filter: brightness(90%) !important;
  color: white;
}

/* colored buttons */
.btn-filter.pending {
  background-color: deeppink;
  border-color: deeppink;
}

.btn-filter.submitted {
  background-color: darkviolet;
  border-color: darkviolet;
}

.btn-filter.running {
  background-color: blue;
  border-color: blue;
}

.btn-filter.error {
  background-color: orange;
  border-color: orange;
}

.btn-filter.failed {
  background-color: red;
  border-color: red;
}

.btn-filter.succeeded {
  background-color: limegreen;
  border-color: limegreen;
}
